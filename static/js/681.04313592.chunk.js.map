{"version":3,"file":"static/js/681.04313592.chunk.js","mappings":"mMAoDA,UA/CgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAWR,SAASE,EAAWC,GAClB,IAAMC,EAAO,IAAIC,KAAKF,GAWtB,MAVmB,UAAMC,EAAKE,cAAX,aAA6BF,EAAKG,WAAa,GAC/DC,WACAC,SAAS,EAAG,KAFI,YAEIL,EAAKM,UAAUF,WAAWC,SAAS,EAAG,KAF1C,YAEkDL,EAClEO,WACAH,WACAC,SAAS,EAAG,KALI,YAKIL,EAAKQ,aAAaJ,WAAWC,SAAS,EAAG,KAL7C,YAKqDL,EACrES,aACAL,WACAC,SAAS,EAAG,KAGhB,CAED,OAxBAK,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBf,GACbgB,MAAK,SAAAC,GAAQ,OAAIlB,EAAWkB,EAAf,IACbC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,SACpBtB,EAAW,GACZ,GACJ,GAAE,CAACC,KAkBF,8BACGF,EAAQwB,OAAS,GAChB,wBACGxB,EAAQyB,KAAI,SAAAC,GAAM,OACjB,2BACE,0BAAI,WAASA,EAAOC,WACpB,yBAAG,mBAAiBvB,EAAWsB,EAAOE,gBACtC,uBAAIF,EAAOG,YAHJH,EAAOI,GADC,OASrB,uBAAG,8CAIV,C,kMC9CKC,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAgB,mCAAG,+FACxBC,EAAS,CACbC,QAASJ,EACTK,KAAM,GAHsB,SAKPJ,EAAAA,EAAAA,IAAU,qBAAsB,CAAEE,OAAAA,IAL3B,uBAKtBG,EALsB,EAKtBA,KALsB,kBAMvBA,EAAKC,SANkB,2CAAH,qDAShBC,EAAc,mCAAG,WAAMC,GAAN,kFACtBN,EAAS,CACbC,QAASJ,EACTK,KAAM,EACNI,MAAAA,GAJ0B,SAMLR,EAAAA,EAAAA,IAAU,gBAAiB,CAAEE,OAAAA,IANxB,uBAMpBG,EANoB,EAMpBA,KANoB,kBAOrBA,EAAKC,QAAQG,QAAO,SAAAC,GAAK,OAC9BA,EAAMC,MAAMC,cAAcC,SAASL,EAAMI,cADX,KAPJ,2CAAH,sDAYdE,EAAU,mCAAG,WAAM5C,GAAN,kFAClBgC,EAAS,CACbC,QAASJ,EACTK,KAAM,GAHgB,SAKDJ,EAAAA,EAAAA,IAAA,iBAAoB9B,GAAW,CAAEgC,OAAAA,IALhC,uBAKhBG,EALgB,EAKhBA,KACRf,QAAQyB,IAAIV,GANY,kBAOjBA,GAPiB,2CAAH,sDAUVW,EAAY,mCAAG,WAAM9C,GAAN,kFACpBgC,EAAS,CACbC,QAASJ,EACTK,KAAM,EACNa,SAAU,SAJc,SAMHjB,EAAAA,EAAAA,IAAA,iBAAoB9B,EAApB,YAAuC,CAAEgC,OAAAA,IANtC,uBAMlBG,EANkB,EAMlBA,KANkB,kBAOnBA,GAPmB,2CAAH,sDAUZpB,EAAe,mCAAG,WAAMf,GAAN,kFACvBgC,EAAS,CACbC,QAASJ,EACTK,KAAM,EACNa,SAAU,SAJiB,SAMNjB,EAAAA,EAAAA,IAAA,iBAAoB9B,EAApB,YAAuC,CAAEgC,OAAAA,IANnC,uBAMrBG,EANqB,EAMrBA,KANqB,kBAOtBA,EAAKC,SAPiB,2CAAH,qD","sources":["components/Reviews.jsx","services/api.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { getMovieReviews } from 'services/api';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieReviews(movieId)\n      .then(response => setReviews(response))\n      .catch(error => {\n        console.error(error.message);\n        setReviews([]);\n      });\n  }, [movieId]);\n\n  function formatDate(dateString) {\n    const date = new Date(dateString);\n    const formattedDate = `${date.getFullYear()}-${(date.getMonth() + 1)\n      .toString()\n      .padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')} ${date\n      .getHours()\n      .toString()\n      .padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}:${date\n      .getSeconds()\n      .toString()\n      .padStart(2, '0')}`;\n\n    return formattedDate;\n  }\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <h3>Author: {review.author}</h3>\n              <p>Date of create: {formatDate(review.created_at)}</p>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\n// const BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '980a29a06d08483ff8c874fb49e62f08';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getMoviesTrading = async () => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n  };\n  const { data } = await axios.get('trending/movie/day', { params });\n  return data.results;\n};\n\nexport const getMovieSearch = async query => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n    query,\n  };\n  const { data } = await axios.get('/search/movie', { params });\n  return data.results.filter(movie =>\n    movie.title.toLowerCase().includes(query.toLowerCase())\n  );\n};\n\nexport const getMovieId = async movieId => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n  };\n  const { data } = await axios.get(`/movie/${movieId}`, { params });\n  console.log(data);\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n    language: 'en-US',\n  };\n  const { data } = await axios.get(`/movie/${movieId}/credits`, { params });\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n    language: 'en-US',\n  };\n  const { data } = await axios.get(`/movie/${movieId}/reviews`, { params });\n  return data.results;\n};\n\n// export const getMoviesTrading = async () => {\n//   const response = await fetch(\n//     `${BASE_URL}trending/movie/day?api_key=${API_KEY}&language=en-US`\n//   ).then(data => data.json());\n//   return response;\n// };\n\n// export const getMovieSearch = async (query, page) => {\n//   const response = await fetch(\n//     `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&include_adult=false&page=${page}&language=en-US`\n//   ).then(data => data.json());\n//   return response;\n// };\n\n// export const getMovieId = async id => {\n//   const response = await fetch(\n//     `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n//   ).then(data => data.json());\n//   return response;\n// };\n\n// export const getMovieCast = async id => {\n//   const response = await fetch(\n//     `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n//   ).then(data => data.json());\n//   return response;\n// };\n\n// export const getMovieReviews = async id => {\n//   const response = await fetch(\n//     `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n//   ).then(data => data.json());\n//   return response;\n// };\n"],"names":["useState","reviews","setReviews","movieId","useParams","formatDate","dateString","date","Date","getFullYear","getMonth","toString","padStart","getDate","getHours","getMinutes","getSeconds","useEffect","getMovieReviews","then","response","catch","error","console","message","length","map","review","author","created_at","content","id","API_KEY","axios","getMoviesTrading","params","api_key","page","data","results","getMovieSearch","query","filter","movie","title","toLowerCase","includes","getMovieId","log","getMovieCast","language"],"sourceRoot":""}
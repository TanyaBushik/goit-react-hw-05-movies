{"version":3,"file":"static/js/946.09baa3f3.chunk.js","mappings":"wKAsBA,IAnBmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAOG,OAAS,GACfH,EAAOI,KAAI,SAAAC,GACT,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMR,GAAhD,SACGI,EAAMK,SAFFL,EAAME,GAMlB,KAGR,C,uIClBYI,EAAgBC,EAAAA,EAAAA,IAAH,qEAKbC,EAAYD,EAAAA,EAAAA,GAAH,sC,SCiBtB,EAnBa,WACX,OAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOd,EAAP,KAAee,EAAf,KAUA,OARAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJJ,EAAUI,EACX,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,EAAME,QAAxB,GACf,GAAE,KAGD,UAACZ,EAAD,YACE,SAACE,EAAD,UAAW,uBACRb,EAAOG,SAAU,SAACqB,EAAA,EAAD,CAAYxB,OAAQA,MAG7C,C,kMClBKyB,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMT,EAAgB,mCAAG,+FACxBU,EAAS,CACbC,QAASH,EACTI,KAAM,GAHsB,SAKPH,EAAAA,EAAAA,IAAU,qBAAsB,CAAEC,OAAAA,IAL3B,uBAKtBG,EALsB,EAKtBA,KALsB,kBAMvBA,EAAKC,SANkB,2CAAH,qDAShBC,EAAc,mCAAG,WAAMC,GAAN,kFACtBN,EAAS,CACbC,QAASH,EACTI,KAAM,EACNI,MAAAA,GAJ0B,SAMLP,EAAAA,EAAAA,IAAU,gBAAiB,CAAEC,OAAAA,IANxB,uBAMpBG,EANoB,EAMpBA,KANoB,kBAOrBA,EAAKC,QAAQG,QAAO,SAAA7B,GAAK,OAC9BA,EAAMK,MAAMyB,cAAcC,SAASH,EAAME,cADX,KAPJ,2CAAH,sDAYdE,EAAU,mCAAG,WAAMC,GAAN,kFAClBX,EAAS,CACbC,QAASH,EACTI,KAAM,GAHgB,SAKDH,EAAAA,EAAAA,IAAA,iBAAoBY,GAAW,CAAEX,OAAAA,IALhC,uBAKhBG,EALgB,EAKhBA,KACRR,QAAQiB,IAAIT,GANY,kBAOjBA,GAPiB,2CAAH,sDAUVU,EAAY,mCAAG,WAAMF,GAAN,kFACpBX,EAAS,CACbC,QAASH,EACTI,KAAM,EACNY,SAAU,SAJc,SAMHf,EAAAA,EAAAA,IAAA,iBAAoBY,EAApB,YAAuC,CAAEX,OAAAA,IANtC,uBAMlBG,EANkB,EAMlBA,KANkB,kBAOnBA,GAPmB,2CAAH,sDAUZY,EAAe,mCAAG,WAAMJ,GAAN,kFACvBX,EAAS,CACbC,QAASH,EACTI,KAAM,EACNY,SAAU,SAJiB,SAMNf,EAAAA,EAAAA,IAAA,iBAAoBY,EAApB,YAAuC,CAAEX,OAAAA,IANnC,uBAMrBG,EANqB,EAMrBA,KANqB,kBAOtBA,EAAKC,SAPiB,2CAAH,qD","sources":["components/MoviesList.jsx","pages/Home.styled.js","pages/Home.jsx","services/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.length > 0 &&\n        movies.map(movie => {\n          return (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n","import styled from '@emotion/styled';\n\nexport const HomeContainer = styled.div`\n  padding-top: 80px;\n  padding-left: 24px;\n`;\n\nexport const HomeTitle = styled.h1`\n  margin: 0;\n`;\n","import { useEffect, useState } from 'react';\nimport { getMoviesTrading } from 'services/api';\nimport MoviesList from '../components/MoviesList';\nimport { HomeContainer, HomeTitle } from 'pages/Home.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    getMoviesTrading()\n      .then(response => {\n        setMovies(response);\n      })\n      .catch(error => console.error(error.message));\n  }, []);\n\n  return (\n    <HomeContainer>\n      <HomeTitle> Trending movies</HomeTitle>\n      {!!movies.length && <MoviesList movies={movies} />}\n    </HomeContainer>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\n// const BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '980a29a06d08483ff8c874fb49e62f08';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getMoviesTrading = async () => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n  };\n  const { data } = await axios.get('trending/movie/day', { params });\n  return data.results;\n};\n\nexport const getMovieSearch = async query => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n    query,\n  };\n  const { data } = await axios.get('/search/movie', { params });\n  return data.results.filter(movie =>\n    movie.title.toLowerCase().includes(query.toLowerCase())\n  );\n};\n\nexport const getMovieId = async movieId => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n  };\n  const { data } = await axios.get(`/movie/${movieId}`, { params });\n  console.log(data);\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n    language: 'en-US',\n  };\n  const { data } = await axios.get(`/movie/${movieId}/credits`, { params });\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n    language: 'en-US',\n  };\n  const { data } = await axios.get(`/movie/${movieId}/reviews`, { params });\n  return data.results;\n};\n\n// export const getMoviesTrading = async () => {\n//   const response = await fetch(\n//     `${BASE_URL}trending/movie/day?api_key=${API_KEY}&language=en-US`\n//   ).then(data => data.json());\n//   return response;\n// };\n\n// export const getMovieSearch = async (query, page) => {\n//   const response = await fetch(\n//     `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&include_adult=false&page=${page}&language=en-US`\n//   ).then(data => data.json());\n//   return response;\n// };\n\n// export const getMovieId = async id => {\n//   const response = await fetch(\n//     `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n//   ).then(data => data.json());\n//   return response;\n// };\n\n// export const getMovieCast = async id => {\n//   const response = await fetch(\n//     `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n//   ).then(data => data.json());\n//   return response;\n// };\n\n// export const getMovieReviews = async id => {\n//   const response = await fetch(\n//     `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n//   ).then(data => data.json());\n//   return response;\n// };\n"],"names":["movies","location","useLocation","length","map","movie","to","id","state","from","title","HomeContainer","styled","HomeTitle","useState","setMovies","useEffect","getMoviesTrading","then","response","catch","error","console","message","MoviesList","API_KEY","axios","params","api_key","page","data","results","getMovieSearch","query","filter","toLowerCase","includes","getMovieId","movieId","log","getMovieCast","language","getMovieReviews"],"sourceRoot":""}
{"version":3,"file":"static/js/840.c14685bc.chunk.js","mappings":"mRAGaA,GAAaC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,mZAqBVE,EAAmBF,EAAAA,EAAAA,IAAH,8IAQhBG,EAAYH,EAAAA,EAAAA,IAAH,gFAMTI,EAAiBJ,EAAAA,EAAAA,IAAH,yFAKdK,EAAiBL,EAAAA,EAAAA,GAAH,6CAIdM,GAAcN,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,oP,SCyCxB,EA3EqB,WAAO,IAAD,IACzB,GAA0BO,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAmBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,MAExDC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAWT,GACRU,MAAK,SAAAC,GAAQ,OAAIZ,EAASY,EAAb,IACbC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,SAClBjB,EAAS,CAAC,EACX,GACJ,GAAE,CAACC,EAASD,IAQb,IAAQkB,EAAWnB,EAAXmB,OACFC,EAAc,IAAIC,KAAKrB,EAAMsB,cAAcC,cAE3CC,EAAaxB,EAAMyB,YACnBC,EAAsB1B,EAAM2B,qBAElC,OACE,UAACjC,EAAD,YACE,UAACH,EAAD,CAAYqC,GAAItB,EAAiBuB,QAAjC,WACE,SAAC,MAAD,IAAmB,cAGrB,UAAClC,EAAD,WACG6B,IACC,gBAAKM,IAAG,UAZC,mCAYD,OAAgBN,GAAcO,IAAK/B,EAAMgC,SAEnD,4BACE,0BACGhC,EAAMgC,MAAM,KAAGZ,GAA4BpB,EAAMiC,OAAO,QAE3D,yBAAG,WACQ,IACRP,GACCA,EAAoBQ,KAAI,SAAAC,GAAO,OAAIA,EAAQC,IAAZ,IAAkBC,KAAK,UAE1D,yBAAG,eA/BX,WACE,IAAMC,EAAUtC,EAAMuC,aAEtB,OADkBC,KAAKC,MAAgB,GAAVH,GAAcI,QAAQ,GAAK,GAEzD,CA2BuBC,OAChB,wBAAI,cACJ,uBAAI3C,EAAM4C,YACV,wBAAI,YACJ,yBAAIzB,GAAUA,EAAOe,KAAI,SAAAW,GAAK,OAAIA,EAAMT,IAAV,IAAgBC,KAAK,KAAK,cAG5D,UAACzC,EAAD,YACE,wBAAI,4BACJ,UAACC,EAAD,YACE,yBACE,UAACC,EAAD,CAAa8B,GAAG,OAAhB,WACE,SAAC,MAAD,IAAoB,aAIxB,yBACE,UAAC9B,EAAD,CAAa8B,GAAG,UAAhB,WACE,SAAC,MAAD,IAAoB,mBAK1B,SAAC,KAAD,SAIP,C,kMClFKkB,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAgB,mCAAG,+FACxBC,EAAS,CACbC,QAASJ,EACTK,KAAM,GAHsB,SAKPJ,EAAAA,EAAAA,IAAU,qBAAsB,CAAEE,OAAAA,IAL3B,uBAKtBG,EALsB,EAKtBA,KALsB,kBAMvBA,EAAKC,SANkB,2CAAH,qDAShBC,EAAc,mCAAG,WAAMC,GAAN,kFACtBN,EAAS,CACbC,QAASJ,EACTK,KAAM,EACNI,MAAAA,GAJ0B,SAMLR,EAAAA,EAAAA,IAAU,gBAAiB,CAAEE,OAAAA,IANxB,uBAMpBG,EANoB,EAMpBA,KANoB,kBAOrBA,EAAKC,QAAQG,QAAO,SAAAxD,GAAK,OAC9BA,EAAMgC,MAAMyB,cAAcC,SAASH,EAAME,cADX,KAPJ,2CAAH,sDAYd9C,EAAU,mCAAG,WAAMT,GAAN,kFAClB+C,EAAS,CACbC,QAASJ,EACTK,KAAM,GAHgB,SAKDJ,EAAAA,EAAAA,IAAA,iBAAoB7C,GAAW,CAAE+C,OAAAA,IALhC,uBAKhBG,EALgB,EAKhBA,KACRpC,QAAQC,IAAImC,GANY,kBAOjBA,GAPiB,2CAAH,sDAUVO,EAAY,mCAAG,WAAMzD,GAAN,kFACpB+C,EAAS,CACbC,QAASJ,EACTK,KAAM,EACNS,SAAU,SAJc,SAMHb,EAAAA,EAAAA,IAAA,iBAAoB7C,EAApB,YAAuC,CAAE+C,OAAAA,IANtC,uBAMlBG,EANkB,EAMlBA,KANkB,kBAOnBA,GAPmB,2CAAH,sDAUZS,EAAe,mCAAG,WAAM3D,GAAN,kFACvB+C,EAAS,CACbC,QAASJ,EACTK,KAAM,EACNS,SAAU,SAJiB,SAMNb,EAAAA,EAAAA,IAAA,iBAAoB7C,EAApB,YAAuC,CAAE+C,OAAAA,IANnC,uBAMrBG,EANqB,EAMrBA,KANqB,kBAOtBA,EAAKC,SAPiB,2CAAH,qD","sources":["pages/MovieDetails.styled.js","pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const BackButton = styled(Link)`\n  text-decoration: none;\n  color: inherit;\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  text-align: center;\n  margin-bottom: 24px;\n  padding: 8px 16px;\n  border: 1px solid grey;\n  border-radius: 10px;\n  transition: border-color 400ms ease, color 400ms ease;\n\n  &:hover,\n  &:focus,\n  &:active {\n    border-color: #ff7341;\n    color: #ff7341;\n  }\n`;\n\nexport const DetailsContainer = styled.div`\n  /* padding: 24px; */\n  padding-top: 80px;\n  padding-left: 24px;\n  padding-right: 24px;\n  padding-bottom: 24px;\n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  gap: 24px;\n  margin-bottom: 16px;\n`;\n\nexport const AdditionalInfo = styled.div`\n  border-top: 1px solid grey;\n  border-bottom: 1px solid grey;\n`;\n\nexport const AdditionalList = styled.ul`\n  list-style: none;\n`;\n\nexport const SubMenuLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  gap: 16px;\n  text-decoration: none;\n  color: inherit;\n  font-size: 24px;\n  transition: color 400ms ease;\n\n  &:hover,\n  &:focus,\n  &:active {\n    color: #ff7341;\n  }\n`;\n","import { useEffect, useState, useRef } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { getMovieId } from 'services/api';\nimport { RiArrowLeftLine, RiArrowRightLine } from 'react-icons/ri';\nimport {\n  BackButton,\n  DetailsContainer,\n  MovieInfo,\n  AdditionalInfo,\n  AdditionalList,\n  SubMenuLink,\n} from 'pages/MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocation = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    getMovieId(movieId)\n      .then(response => setMovie(response))\n      .catch(error => {\n        console.log(error.message);\n        setMovie({});\n      });\n  }, [movieId, setMovie]);\n\n  function countUserScore() {\n    const average = movie.vote_average;\n    const userScore = Math.round(average * 10).toFixed(0) + '%';\n    return userScore;\n  }\n\n  const { genres } = movie;\n  const releaseDate = new Date(movie.release_date).getFullYear();\n  const imageUrl = 'https://image.tmdb.org/t/p/w300';\n  const posterPath = movie.poster_path;\n  const productionCountries = movie.production_countries;\n\n  return (\n    <DetailsContainer>\n      <BackButton to={backLinkLocation.current}>\n        <RiArrowLeftLine />\n        Go back\n      </BackButton>\n      <MovieInfo>\n        {posterPath && (\n          <img src={`${imageUrl}${posterPath}`} alt={movie.title} />\n        )}\n        <div>\n          <h2>\n            {movie.title} ({releaseDate ? releaseDate : movie.status})\n          </h2>\n          <p>\n            Made in:{' '}\n            {productionCountries &&\n              productionCountries.map(country => country.name).join(', ')}\n          </p>\n          <p>User Score: {countUserScore()}</p>\n          <h3>Overview</h3>\n          <p>{movie.overview}</p>\n          <h3>Genres</h3>\n          <p>{genres && genres.map(genre => genre.name).join(' ')} </p>\n        </div>\n      </MovieInfo>\n      <AdditionalInfo>\n        <h3>Additional information</h3>\n        <AdditionalList>\n          <li>\n            <SubMenuLink to=\"cast\">\n              <RiArrowRightLine />\n              Cast\n            </SubMenuLink>\n          </li>\n          <li>\n            <SubMenuLink to=\"reviews\">\n              <RiArrowRightLine />\n              Reviews\n            </SubMenuLink>\n          </li>\n        </AdditionalList>\n        <Outlet />\n      </AdditionalInfo>\n    </DetailsContainer>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\n// const BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '980a29a06d08483ff8c874fb49e62f08';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getMoviesTrading = async () => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n  };\n  const { data } = await axios.get('trending/movie/day', { params });\n  return data.results;\n};\n\nexport const getMovieSearch = async query => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n    query,\n  };\n  const { data } = await axios.get('/search/movie', { params });\n  return data.results.filter(movie =>\n    movie.title.toLowerCase().includes(query.toLowerCase())\n  );\n};\n\nexport const getMovieId = async movieId => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n  };\n  const { data } = await axios.get(`/movie/${movieId}`, { params });\n  console.log(data);\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n    language: 'en-US',\n  };\n  const { data } = await axios.get(`/movie/${movieId}/credits`, { params });\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n    language: 'en-US',\n  };\n  const { data } = await axios.get(`/movie/${movieId}/reviews`, { params });\n  return data.results;\n};\n\n// export const getMoviesTrading = async () => {\n//   const response = await fetch(\n//     `${BASE_URL}trending/movie/day?api_key=${API_KEY}&language=en-US`\n//   ).then(data => data.json());\n//   return response;\n// };\n\n// export const getMovieSearch = async (query, page) => {\n//   const response = await fetch(\n//     `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&include_adult=false&page=${page}&language=en-US`\n//   ).then(data => data.json());\n//   return response;\n// };\n\n// export const getMovieId = async id => {\n//   const response = await fetch(\n//     `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n//   ).then(data => data.json());\n//   return response;\n// };\n\n// export const getMovieCast = async id => {\n//   const response = await fetch(\n//     `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n//   ).then(data => data.json());\n//   return response;\n// };\n\n// export const getMovieReviews = async id => {\n//   const response = await fetch(\n//     `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n//   ).then(data => data.json());\n//   return response;\n// };\n"],"names":["BackButton","styled","Link","DetailsContainer","MovieInfo","AdditionalInfo","AdditionalList","SubMenuLink","useState","movie","setMovie","movieId","useParams","location","useLocation","backLinkLocation","useRef","state","from","useEffect","getMovieId","then","response","catch","error","console","log","message","genres","releaseDate","Date","release_date","getFullYear","posterPath","poster_path","productionCountries","production_countries","to","current","src","alt","title","status","map","country","name","join","average","vote_average","Math","round","toFixed","countUserScore","overview","genre","API_KEY","axios","getMoviesTrading","params","api_key","page","data","results","getMovieSearch","query","filter","toLowerCase","includes","getMovieCast","language","getMovieReviews"],"sourceRoot":""}
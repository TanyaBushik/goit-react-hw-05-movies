{"version":3,"file":"static/js/770.a1fc0830.chunk.js","mappings":"uPAEaA,EAAWC,EAAAA,EAAAA,IAAH,iGASRC,EAAWD,EAAAA,EAAAA,IAAH,2H,SCsCrB,EA5Ca,WACX,OAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaH,GACVI,MAAK,SAAAC,GAAO,OAAIN,EAAQM,EAAQP,KAApB,IACZQ,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,SAClBX,EAAQ,GACT,GACJ,GAAE,CAACC,IAIJ,OAAoB,IAAhBF,EAAKa,QACA,uBAAG,4CAIV,wBACGb,EAAKc,KAAI,SAAAC,GAAK,OACb,UAACnB,EAAD,WACGmB,EAAMC,eACL,gBACEC,IAAG,UAZE,mCAYF,OAAgBF,EAAMC,cACzBE,IAAKH,EAAMI,KACXC,MAAM,SAGV,UAACtB,EAAD,YACE,0BACE,uBAAG,UAAS,IAAEiB,EAAMI,SAEtB,0BACE,uBAAG,eAAc,IAAEJ,EAAMM,kBAbhBN,EAAMO,GADR,KAqBpB,C,kMC3CKC,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAgB,mCAAG,+FACxBC,EAAS,CACbC,QAASJ,EACTK,KAAM,GAHsB,SAKPJ,EAAAA,EAAAA,IAAU,qBAAsB,CAAEE,OAAAA,IAL3B,uBAKtBG,EALsB,EAKtBA,KALsB,kBAMvBA,EAAKC,SANkB,2CAAH,qDAShBC,EAAc,mCAAG,WAAMC,GAAN,kFACtBN,EAAS,CACbC,QAASJ,EACTK,KAAM,EACNI,MAAAA,GAJ0B,SAMLR,EAAAA,EAAAA,IAAU,gBAAiB,CAAEE,OAAAA,IANxB,uBAMpBG,EANoB,EAMpBA,KANoB,kBAOrBA,EAAKC,QAAQG,QAAO,SAAAC,GAAK,OAC9BA,EAAMC,MAAMC,cAAcC,SAASL,EAAMI,cADX,KAPJ,2CAAH,sDAYdE,EAAU,mCAAG,WAAMpC,GAAN,kFAClBwB,EAAS,CACbC,QAASJ,EACTK,KAAM,GAHgB,SAKDJ,EAAAA,EAAAA,IAAA,iBAAoBtB,GAAW,CAAEwB,OAAAA,IALhC,uBAKhBG,EALgB,EAKhBA,KACRnB,QAAQC,IAAIkB,GANY,kBAOjBA,GAPiB,2CAAH,sDAUVxB,EAAY,mCAAG,WAAMH,GAAN,kFACpBwB,EAAS,CACbC,QAASJ,EACTK,KAAM,EACNW,SAAU,SAJc,SAMHf,EAAAA,EAAAA,IAAA,iBAAoBtB,EAApB,YAAuC,CAAEwB,OAAAA,IANtC,uBAMlBG,EANkB,EAMlBA,KANkB,kBAOnBA,GAPmB,2CAAH,sDAUZW,EAAe,mCAAG,WAAMtC,GAAN,kFACvBwB,EAAS,CACbC,QAASJ,EACTK,KAAM,EACNW,SAAU,SAJiB,SAMNf,EAAAA,EAAAA,IAAA,iBAAoBtB,EAApB,YAAuC,CAAEwB,OAAAA,IANnC,uBAMrBG,EANqB,EAMrBA,KANqB,kBAOtBA,EAAKC,SAPiB,2CAAH,qD","sources":["components/Cast.styled.js","components/Cast.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastItem = styled.div`\n  display: flex;\n  gap: 24px;\n\n  & + & {\n    margin-top: 16px;\n  }\n`;\n\nexport const CastInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  justify-content: center;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieCast } from 'services/api';\nimport { CastItem, CastInfo } from 'components/Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieCast(movieId)\n      .then(credits => setCast(credits.cast))\n      .catch(error => {\n        console.log(error.message);\n        setCast([]);\n      });\n  }, [movieId]);\n\n  const imageUrl = 'https://image.tmdb.org/t/p/w300';\n\n  if (cast.length === 0) {\n    return <p>We don't have any casts for this movie</p>;\n  }\n\n  return (\n    <ul>\n      {cast.map(actor => (\n        <CastItem key={actor.id}>\n          {actor.profile_path && (\n            <img\n              src={`${imageUrl}${actor.profile_path}`}\n              alt={actor.name}\n              width=\"120\"\n            />\n          )}\n          <CastInfo>\n            <p>\n              <b>Name:</b> {actor.name}\n            </p>\n            <p>\n              <b>Character:</b> {actor.character}\n            </p>\n          </CastInfo>\n        </CastItem>\n      ))}\n    </ul>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\n// const BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '980a29a06d08483ff8c874fb49e62f08';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getMoviesTrading = async () => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n  };\n  const { data } = await axios.get('trending/movie/day', { params });\n  return data.results;\n};\n\nexport const getMovieSearch = async query => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n    query,\n  };\n  const { data } = await axios.get('/search/movie', { params });\n  return data.results.filter(movie =>\n    movie.title.toLowerCase().includes(query.toLowerCase())\n  );\n};\n\nexport const getMovieId = async movieId => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n  };\n  const { data } = await axios.get(`/movie/${movieId}`, { params });\n  console.log(data);\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n    language: 'en-US',\n  };\n  const { data } = await axios.get(`/movie/${movieId}/credits`, { params });\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n    language: 'en-US',\n  };\n  const { data } = await axios.get(`/movie/${movieId}/reviews`, { params });\n  return data.results;\n};\n\n// export const getMoviesTrading = async () => {\n//   const response = await fetch(\n//     `${BASE_URL}trending/movie/day?api_key=${API_KEY}&language=en-US`\n//   ).then(data => data.json());\n//   return response;\n// };\n\n// export const getMovieSearch = async (query, page) => {\n//   const response = await fetch(\n//     `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&include_adult=false&page=${page}&language=en-US`\n//   ).then(data => data.json());\n//   return response;\n// };\n\n// export const getMovieId = async id => {\n//   const response = await fetch(\n//     `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n//   ).then(data => data.json());\n//   return response;\n// };\n\n// export const getMovieCast = async id => {\n//   const response = await fetch(\n//     `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n//   ).then(data => data.json());\n//   return response;\n// };\n\n// export const getMovieReviews = async id => {\n//   const response = await fetch(\n//     `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n//   ).then(data => data.json());\n//   return response;\n// };\n"],"names":["CastItem","styled","CastInfo","useState","cast","setCast","movieId","useParams","useEffect","getMovieCast","then","credits","catch","error","console","log","message","length","map","actor","profile_path","src","alt","name","width","character","id","API_KEY","axios","getMoviesTrading","params","api_key","page","data","results","getMovieSearch","query","filter","movie","title","toLowerCase","includes","getMovieId","language","getMovieReviews"],"sourceRoot":""}